-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv12_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv12_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_reg_1611 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1635 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal or_cond_i_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_3_reg_330 : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_341 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op179_read_state6 : BOOLEAN;
    signal ap_predicate_op180_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_341_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal widthloop_fu_352_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_77_fu_358_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_80_fu_366_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_370_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_86_fu_376_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_92_fu_384_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_227_cast_cast_fu_402_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_54_fu_406_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_231_0_1_cast_fu_424_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_231_0_1_cast_reg_1453 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_231_0_2_cast_fu_428_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_231_0_2_cast_reg_1458 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_231_1_cast_fu_432_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_231_1_cast_reg_1463 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_231_1_2_cast_fu_436_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_231_1_2_cast_reg_1468 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_231_2_cast_fu_440_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_231_2_cast_reg_1473 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_231_2_1_cast_fu_444_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_231_2_1_cast_reg_1478 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_68_cast_cast_fu_462_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_70_fu_466_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_72_fu_472_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_487_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_1502 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_s_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_1517 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_1_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_1_reg_1521 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1525 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_531_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_67_reg_1532 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_99_reg_1540 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_545_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_7_reg_1545 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_fu_551_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_1_reg_1550 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_225_1_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_225_1_reg_1557 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_584_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_102_reg_1562 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_6_2_fu_588_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_6_2_reg_1568 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_225_2_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_225_2_reg_1575 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_621_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_105_reg_1580 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_111_fu_732_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_111_reg_1586 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal row_assign_10_1_t_fu_761_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1591 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_787_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1596 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_146_0_not_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_146_0_not_reg_1601 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_112_fu_802_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_112_reg_1606 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1611_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1611_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1611_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1611_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_816_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ImagLoc_x_fu_838_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_reg_1620 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_116_fu_844_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_reg_1625 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_reg_1630 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1635_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1635_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_cast_fu_891_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i_i_cast_cast_reg_1640 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_66_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_1645 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_2_fu_900_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_reg_1650 : STD_LOGIC_VECTOR (12 downto 0);
    signal brmerge_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1655 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1655_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1662_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1666 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_3_t_fu_961_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_3_t_reg_1672 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1679 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1679_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1685 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1685_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_1691 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal col_buf_0_val_0_0_fu_995_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1696 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_1704 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1013_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1709 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1031_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1717 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_1082_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1725 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1725_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1725_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1725_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_1096_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1731 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1731_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1731_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_1110_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1737 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_reg_1747 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_reg_1747_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_reg_1757 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1287_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_0_1_reg_1762 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal grp_fu_1294_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_V_0_2_reg_1777 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal grp_fu_1300_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sum_V_1_1_reg_1792 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal grp_fu_1307_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp27_reg_1797 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_s_fu_1214_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_s_fu_1214_p2 : signal is "no";
    signal p_Val2_s_reg_1802 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_s_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_reg_1814 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state7 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_319 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_81_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_fu_348_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_50_fu_388_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_53_fu_396_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_78_fu_362_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_fu_412_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_448_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_56_fu_456_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_68_fu_416_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_88_fu_380_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_97_fu_498_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_cast_fu_478_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_101_fu_557_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_565_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i485_i_1_fu_571_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_104_fu_594_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_602_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i485_i_2_fu_608_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_98_fu_625_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i485_i_fu_648_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i485_i_cast_cast_fu_653_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_100_fu_667_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_216_1_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_690_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_216_2_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev13_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_662_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_71_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_716_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_109_fu_720_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i484_i_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_713_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_110_fu_724_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_fu_740_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i484_i_1_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_fu_750_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_74_fu_744_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_fu_753_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_79_fu_766_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i484_i_2_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_776_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_87_fu_770_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_89_fu_779_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_106_fu_797_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_115_fu_822_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_3_cast_fu_807_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal rev14_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_869_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_877_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_fu_883_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp4_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_cast_fu_915_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_64_not_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_918_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_fu_939_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_assign_cast_fu_946_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_118_fu_950_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_82_fu_984_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_83_fu_1002_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_fu_1020_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_85_fu_1074_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_90_fu_1088_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_fu_1102_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_0_cast_fu_1146_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_2_fu_1150_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1321_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1314_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp26_cast_fu_1211_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_not1_i_i_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_not_fu_1252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_i_i_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_fu_1235_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal underflow_fu_1243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_i_i_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_fu_1262_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_i_i_fu_1270_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1287_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1287_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1294_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1294_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1300_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1300_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1307_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1307_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1307_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1314_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1321_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1321_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1287_ce : STD_LOGIC;
    signal grp_fu_1294_ce : STD_LOGIC;
    signal grp_fu_1300_ce : STD_LOGIC;
    signal grp_fu_1307_ce : STD_LOGIC;
    signal grp_fu_1314_ce : STD_LOGIC;
    signal grp_fu_1321_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_172 : BOOLEAN;
    signal ap_enable_state6_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_192 : BOOLEAN;
    signal ap_enable_state7_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op201_store_state7 : BOOLEAN;
    signal ap_enable_operation_201 : BOOLEAN;
    signal ap_predicate_op205_store_state7 : BOOLEAN;
    signal ap_enable_operation_205 : BOOLEAN;
    signal ap_enable_operation_175 : BOOLEAN;
    signal ap_enable_operation_195 : BOOLEAN;
    signal ap_predicate_op214_store_state8 : BOOLEAN;
    signal ap_enable_operation_214 : BOOLEAN;
    signal ap_enable_state8_pp0_iter3_stage0 : BOOLEAN;
    signal ap_predicate_op217_store_state8 : BOOLEAN;
    signal ap_enable_operation_217 : BOOLEAN;
    signal ap_predicate_op177_load_state6 : BOOLEAN;
    signal ap_enable_operation_177 : BOOLEAN;
    signal ap_predicate_op198_load_state7 : BOOLEAN;
    signal ap_enable_operation_198 : BOOLEAN;
    signal ap_predicate_op212_store_state8 : BOOLEAN;
    signal ap_enable_operation_212 : BOOLEAN;
    signal ap_predicate_op216_store_state8 : BOOLEAN;
    signal ap_enable_operation_216 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1287_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1294_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1300_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1307_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1307_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1314_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1321_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_1246 : BOOLEAN;

    component canny_edge_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component canny_edge_mac_muladd_2s_8ns_9s_11_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_edge_mac_muladd_2s_8ns_11s_11_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component canny_edge_mac_muladd_3s_8ns_11s_12_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component canny_edge_mac_muladd_2s_8ns_8ns_10_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component canny_edge_mac_muladd_4ns_8ns_12s_12_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component canny_edge_mac_muladd_3ns_8ns_10s_11_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => reg_341);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    canny_edge_mux_32_8_1_1_U15 : component canny_edge_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_174,
        din1 => right_border_buf_0_1_fu_178,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1672,
        dout => tmp_82_fu_984_p5);

    canny_edge_mux_32_8_1_1_U16 : component canny_edge_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_186,
        din1 => right_border_buf_0_4_fu_190,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1672,
        dout => tmp_83_fu_1002_p5);

    canny_edge_mux_32_8_1_1_U17 : component canny_edge_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_194,
        din1 => right_border_buf_0_2_fu_182,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_reg_1672,
        dout => tmp_84_fu_1020_p5);

    canny_edge_mux_32_8_1_1_U18 : component canny_edge_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1696,
        din1 => col_buf_0_val_1_0_reg_1709,
        din2 => col_buf_0_val_2_0_reg_1717,
        din3 => tmp_112_reg_1606,
        dout => tmp_85_fu_1074_p5);

    canny_edge_mux_32_8_1_1_U19 : component canny_edge_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1696,
        din1 => col_buf_0_val_1_0_reg_1709,
        din2 => col_buf_0_val_2_0_reg_1717,
        din3 => row_assign_10_1_t_reg_1591,
        dout => tmp_90_fu_1088_p5);

    canny_edge_mux_32_8_1_1_U20 : component canny_edge_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_reg_1696,
        din1 => col_buf_0_val_1_0_reg_1709,
        din2 => col_buf_0_val_2_0_reg_1717,
        din3 => row_assign_10_2_t_reg_1596,
        dout => tmp_91_fu_1102_p5);

    canny_edge_mac_muladd_2s_8ns_9s_11_3_1_U21 : component canny_edge_mac_muladd_2s_8ns_9s_11_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1287_p0,
        din1 => grp_fu_1287_p1,
        din2 => r_V_2_fu_1150_p2,
        ce => grp_fu_1287_ce,
        dout => grp_fu_1287_p3);

    canny_edge_mac_muladd_2s_8ns_11s_11_3_1_U22 : component canny_edge_mac_muladd_2s_8ns_11s_11_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1294_p0,
        din1 => grp_fu_1294_p1,
        din2 => sum_V_0_1_reg_1762,
        ce => grp_fu_1294_ce,
        dout => grp_fu_1294_p3);

    canny_edge_mac_muladd_3s_8ns_11s_12_3_1_U23 : component canny_edge_mac_muladd_3s_8ns_11s_12_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1300_p0,
        din1 => grp_fu_1300_p1,
        din2 => sum_V_0_2_reg_1777,
        ce => grp_fu_1300_ce,
        dout => grp_fu_1300_p3);

    canny_edge_mac_muladd_2s_8ns_8ns_10_3_1_U24 : component canny_edge_mac_muladd_2s_8ns_8ns_10_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1307_p0,
        din1 => grp_fu_1307_p1,
        din2 => grp_fu_1307_p2,
        ce => grp_fu_1307_ce,
        dout => grp_fu_1307_p3);

    canny_edge_mac_muladd_4ns_8ns_12s_12_3_1_U25 : component canny_edge_mac_muladd_4ns_8ns_12s_12_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1314_p0,
        din1 => grp_fu_1314_p1,
        din2 => sum_V_1_1_reg_1792,
        ce => grp_fu_1314_ce,
        dout => grp_fu_1314_p3);

    canny_edge_mac_muladd_3ns_8ns_10s_11_3_1_U26 : component canny_edge_mac_muladd_3ns_8ns_10s_11_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1321_p0,
        din1 => grp_fu_1321_p1,
        din2 => tmp27_reg_1797,
        ce => grp_fu_1321_ce,
        dout => grp_fu_1321_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_fu_811_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state7)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_3_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_811_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_3_reg_330 <= j_V_fu_816_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_3_reg_330 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                t_V_reg_319 <= i_V_reg_1502;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_319 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_811_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ImagLoc_x_reg_1620 <= ImagLoc_x_fu_838_p2;
                brmerge_reg_1655 <= brmerge_fu_905_p2;
                or_cond_i_i_reg_1635 <= or_cond_i_i_fu_863_p2;
                or_cond_i_reg_1662 <= or_cond_i_fu_910_p2;
                p_assign_2_reg_1650 <= p_assign_2_fu_900_p2;
                p_p2_i_i_cast_cast_reg_1640 <= p_p2_i_i_cast_cast_fu_891_p1;
                tmp_116_reg_1625 <= ImagLoc_x_fu_838_p2(11 downto 11);
                tmp_64_reg_1630 <= tmp_64_fu_858_p2;
                tmp_66_reg_1645 <= tmp_66_fu_895_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1655_pp0_iter1_reg <= brmerge_reg_1655;
                exitcond_reg_1611 <= exitcond_fu_811_p2;
                exitcond_reg_1611_pp0_iter1_reg <= exitcond_reg_1611;
                or_cond_i_i_reg_1635_pp0_iter1_reg <= or_cond_i_i_reg_1635;
                or_cond_i_reg_1662_pp0_iter1_reg <= or_cond_i_reg_1662;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1611 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_assign_3_t_reg_1672 <= col_assign_3_t_fu_961_p2;
                k_buf_0_val_3_addr_reg_1666 <= tmp_81_fu_954_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1679 <= tmp_81_fu_954_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1685 <= tmp_81_fu_954_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_0_reg_1696 <= col_buf_0_val_0_0_fu_995_p3;
                col_buf_0_val_1_0_reg_1709 <= col_buf_0_val_1_0_fu_1013_p3;
                col_buf_0_val_2_0_reg_1717 <= col_buf_0_val_2_0_fu_1031_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_reg_1611_pp0_iter2_reg <= exitcond_reg_1611_pp0_iter1_reg;
                exitcond_reg_1611_pp0_iter3_reg <= exitcond_reg_1611_pp0_iter2_reg;
                exitcond_reg_1611_pp0_iter4_reg <= exitcond_reg_1611_pp0_iter3_reg;
                k_buf_0_val_4_addr_reg_1679_pp0_iter2_reg <= k_buf_0_val_4_addr_reg_1679;
                k_buf_0_val_5_addr_reg_1685_pp0_iter2_reg <= k_buf_0_val_5_addr_reg_1685;
                or_cond_i_i_reg_1635_pp0_iter2_reg <= or_cond_i_i_reg_1635_pp0_iter1_reg;
                or_cond_i_reg_1662_pp0_iter2_reg <= or_cond_i_reg_1662_pp0_iter1_reg;
                or_cond_i_reg_1662_pp0_iter3_reg <= or_cond_i_reg_1662_pp0_iter2_reg;
                or_cond_i_reg_1662_pp0_iter4_reg <= or_cond_i_reg_1662_pp0_iter3_reg;
                or_cond_i_reg_1662_pp0_iter5_reg <= or_cond_i_reg_1662_pp0_iter4_reg;
                or_cond_i_reg_1662_pp0_iter6_reg <= or_cond_i_reg_1662_pp0_iter5_reg;
                or_cond_i_reg_1662_pp0_iter7_reg <= or_cond_i_reg_1662_pp0_iter6_reg;
                or_cond_i_reg_1662_pp0_iter8_reg <= or_cond_i_reg_1662_pp0_iter7_reg;
                reg_341_pp0_iter2_reg <= reg_341;
                src_kernel_win_0_va_16_reg_1747_pp0_iter4_reg <= src_kernel_win_0_va_16_reg_1747;
                src_kernel_win_0_va_6_reg_1725 <= src_kernel_win_0_va_6_fu_1082_p3;
                src_kernel_win_0_va_6_reg_1725_pp0_iter4_reg <= src_kernel_win_0_va_6_reg_1725;
                src_kernel_win_0_va_6_reg_1725_pp0_iter5_reg <= src_kernel_win_0_va_6_reg_1725_pp0_iter4_reg;
                src_kernel_win_0_va_6_reg_1725_pp0_iter6_reg <= src_kernel_win_0_va_6_reg_1725_pp0_iter5_reg;
                src_kernel_win_0_va_7_reg_1731 <= src_kernel_win_0_va_7_fu_1096_p3;
                src_kernel_win_0_va_7_reg_1731_pp0_iter4_reg <= src_kernel_win_0_va_7_reg_1731;
                src_kernel_win_0_va_7_reg_1731_pp0_iter5_reg <= src_kernel_win_0_va_7_reg_1731_pp0_iter4_reg;
                src_kernel_win_0_va_8_reg_1737 <= src_kernel_win_0_va_8_fu_1110_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1502 <= i_V_fu_487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_482_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1512 <= icmp_fu_508_p2;
                p_assign_6_1_reg_1550 <= p_assign_6_1_fu_551_p2;
                p_assign_6_2_reg_1568 <= p_assign_6_2_fu_588_p2;
                p_assign_7_reg_1545 <= p_assign_7_fu_545_p2;
                tmp_102_reg_1562 <= tmp_102_fu_584_p1;
                tmp_105_reg_1580 <= tmp_105_fu_621_p1;
                tmp_190_1_reg_1521 <= tmp_190_1_fu_520_p2;
                tmp_225_1_reg_1557 <= tmp_225_1_fu_579_p2;
                tmp_225_2_reg_1575 <= tmp_225_2_fu_616_p2;
                tmp_59_reg_1517 <= tmp_59_fu_514_p2;
                tmp_62_reg_1525 <= tmp_62_fu_526_p2;
                tmp_67_reg_1532 <= tmp_67_fu_531_p2;
                tmp_99_reg_1540 <= tmp_67_fu_531_p2(11 downto 11);
                tmp_s_reg_1507 <= tmp_s_fu_493_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_load_reg_1691 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_1704 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1662_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_s_reg_1807 <= p_Val2_s_fu_1214_p2(11 downto 11);
                p_Val2_s_reg_1802 <= p_Val2_s_fu_1214_p2;
                tmp_122_reg_1814 <= p_Val2_s_fu_1214_p2(11 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op180_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op179_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_341 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_178 <= right_border_buf_0_s_fu_174;
                right_border_buf_0_2_fu_182 <= right_border_buf_0_5_fu_194;
                right_border_buf_0_3_fu_186 <= col_buf_0_val_1_0_fu_1013_p3;
                right_border_buf_0_4_fu_190 <= right_border_buf_0_3_fu_186;
                right_border_buf_0_5_fu_194 <= col_buf_0_val_2_0_fu_1031_p3;
                right_border_buf_0_s_fu_174 <= col_buf_0_val_0_0_fu_995_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_62_reg_1525 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                row_assign_10_1_t_reg_1591 <= row_assign_10_1_t_fu_761_p2;
                row_assign_10_2_t_reg_1596 <= row_assign_10_2_t_fu_787_p2;
                tmp_111_reg_1586 <= tmp_111_fu_732_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1611_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_1747 <= src_kernel_win_0_va_4_fu_166;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1611_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_154 <= src_kernel_win_0_va_fu_150;
                src_kernel_win_0_va_2_fu_158 <= src_kernel_win_0_va_7_reg_1731_pp0_iter4_reg;
                src_kernel_win_0_va_3_fu_162 <= src_kernel_win_0_va_2_fu_158;
                src_kernel_win_0_va_5_fu_170 <= src_kernel_win_0_va_16_reg_1747_pp0_iter4_reg;
                src_kernel_win_0_va_fu_150 <= src_kernel_win_0_va_6_reg_1725_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1611_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_4_fu_166 <= src_kernel_win_0_va_8_fu_1110_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1662_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_9_reg_1757 <= src_kernel_win_0_va_fu_150;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1662_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_1_reg_1762 <= grp_fu_1287_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1662_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_0_2_reg_1777 <= grp_fu_1294_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_1662_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_V_1_1_reg_1792 <= grp_fu_1300_p3;
                tmp27_reg_1797 <= grp_fu_1307_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_62_reg_1525 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_112_reg_1606 <= tmp_112_fu_802_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_146_0_not_reg_1601 <= tmp_146_0_not_fu_792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_231_0_1_cast_reg_1453 <= tmp_231_0_1_cast_fu_424_p1;
                tmp_231_0_2_cast_reg_1458 <= tmp_231_0_2_cast_fu_428_p1;
                    tmp_231_1_2_cast_reg_1468(3 downto 0) <= tmp_231_1_2_cast_fu_436_p1(3 downto 0);
                tmp_231_1_cast_reg_1463 <= tmp_231_1_cast_fu_432_p1;
                    tmp_231_2_1_cast_reg_1478(2 downto 0) <= tmp_231_2_1_cast_fu_444_p1(2 downto 0);
                tmp_231_2_cast_reg_1473 <= tmp_231_2_cast_fu_440_p1;
            end if;
        end if;
    end process;
    tmp_231_1_2_cast_reg_1468(11 downto 4) <= "00000000";
    tmp_231_2_1_cast_reg_1478(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_CS_fsm_state2, exitcond1_fu_482_p2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_fu_482_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
        ImagLoc_x_cast_cast_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_reg_1620),13));

    ImagLoc_x_fu_838_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_3_cast_fu_807_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, or_cond_i_reg_1662_pp0_iter8_reg, ap_predicate_op179_read_state6, ap_predicate_op180_read_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_1662_pp0_iter8_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op180_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op179_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, or_cond_i_reg_1662_pp0_iter8_reg, ap_predicate_op179_read_state6, ap_predicate_op180_read_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_1662_pp0_iter8_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op180_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op179_read_state6 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, or_cond_i_reg_1662_pp0_iter8_reg, ap_predicate_op179_read_state6, ap_predicate_op180_read_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_1662_pp0_iter8_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op180_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op179_read_state6 = ap_const_boolean_1)))));
    end process;

        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage0_iter9_assign_proc : process(p_dst_data_stream_V_full_n, or_cond_i_reg_1662_pp0_iter8_reg)
    begin
                ap_block_state14_pp0_stage0_iter9 <= ((or_cond_i_reg_1662_pp0_iter8_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op179_read_state6, ap_predicate_op180_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op180_read_state6 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op179_read_state6 = ap_const_boolean_1)));
    end process;

        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1246_assign_proc : process(ap_block_pp0_stage0, or_cond_i_i_reg_1635_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
                ap_condition_1246 <= ((or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter2_state7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter2_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond1_fu_482_p2)
    begin
        if ((((exitcond1_fu_482_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_172_assign_proc : process(exitcond_reg_1611)
    begin
                ap_enable_operation_172 <= (exitcond_reg_1611 = ap_const_lv1_0);
    end process;


    ap_enable_operation_175_assign_proc : process(exitcond_reg_1611)
    begin
                ap_enable_operation_175 <= (exitcond_reg_1611 = ap_const_lv1_0);
    end process;


    ap_enable_operation_177_assign_proc : process(ap_predicate_op177_load_state6)
    begin
                ap_enable_operation_177 <= (ap_predicate_op177_load_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_192_assign_proc : process(exitcond_reg_1611_pp0_iter1_reg)
    begin
                ap_enable_operation_192 <= (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_195_assign_proc : process(exitcond_reg_1611_pp0_iter1_reg)
    begin
                ap_enable_operation_195 <= (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_198_assign_proc : process(ap_predicate_op198_load_state7)
    begin
                ap_enable_operation_198 <= (ap_predicate_op198_load_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_201_assign_proc : process(ap_predicate_op201_store_state7)
    begin
                ap_enable_operation_201 <= (ap_predicate_op201_store_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_205_assign_proc : process(ap_predicate_op205_store_state7)
    begin
                ap_enable_operation_205 <= (ap_predicate_op205_store_state7 = ap_const_boolean_1);
    end process;


    ap_enable_operation_212_assign_proc : process(ap_predicate_op212_store_state8)
    begin
                ap_enable_operation_212 <= (ap_predicate_op212_store_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_214_assign_proc : process(ap_predicate_op214_store_state8)
    begin
                ap_enable_operation_214 <= (ap_predicate_op214_store_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_216_assign_proc : process(ap_predicate_op216_store_state8)
    begin
                ap_enable_operation_216 <= (ap_predicate_op216_store_state8 = ap_const_boolean_1);
    end process;


    ap_enable_operation_217_assign_proc : process(ap_predicate_op217_store_state8)
    begin
                ap_enable_operation_217 <= (ap_predicate_op217_store_state8 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state6_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state6_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state7_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state7_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_enable_state8_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state8_pp0_iter3_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op177_load_state6_assign_proc : process(exitcond_reg_1611, brmerge_reg_1655)
    begin
                ap_predicate_op177_load_state6 <= ((brmerge_reg_1655 = ap_const_lv1_1) and (exitcond_reg_1611 = ap_const_lv1_0));
    end process;


    ap_predicate_op179_read_state6_assign_proc : process(exitcond_reg_1611, or_cond_i_i_reg_1635, icmp_reg_1512)
    begin
                ap_predicate_op179_read_state6 <= ((or_cond_i_i_reg_1635 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (exitcond_reg_1611 = ap_const_lv1_0));
    end process;


    ap_predicate_op180_read_state6_assign_proc : process(exitcond_reg_1611, or_cond_i_i_reg_1635, icmp_reg_1512, tmp_s_reg_1507)
    begin
                ap_predicate_op180_read_state6 <= ((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635 = ap_const_lv1_1) and (exitcond_reg_1611 = ap_const_lv1_0));
    end process;


    ap_predicate_op198_load_state7_assign_proc : process(exitcond_reg_1611_pp0_iter1_reg, brmerge_reg_1655_pp0_iter1_reg)
    begin
                ap_predicate_op198_load_state7 <= ((brmerge_reg_1655_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op201_store_state7_assign_proc : process(icmp_reg_1512, tmp_59_reg_1517, exitcond_reg_1611_pp0_iter1_reg, or_cond_i_i_reg_1635_pp0_iter1_reg)
    begin
                ap_predicate_op201_store_state7 <= ((or_cond_i_i_reg_1635_pp0_iter1_reg = ap_const_lv1_1) and (tmp_59_reg_1517 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op205_store_state7_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, exitcond_reg_1611_pp0_iter1_reg, or_cond_i_i_reg_1635_pp0_iter1_reg)
    begin
                ap_predicate_op205_store_state7 <= ((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op212_store_state8_assign_proc : process(icmp_reg_1512, tmp_59_reg_1517, or_cond_i_i_reg_1635_pp0_iter2_reg)
    begin
                ap_predicate_op212_store_state8 <= ((or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (tmp_59_reg_1517 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0));
    end process;


    ap_predicate_op214_store_state8_assign_proc : process(icmp_reg_1512, tmp_190_1_reg_1521, or_cond_i_i_reg_1635_pp0_iter2_reg)
    begin
                ap_predicate_op214_store_state8 <= ((or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (tmp_190_1_reg_1521 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0));
    end process;


    ap_predicate_op216_store_state8_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, or_cond_i_i_reg_1635_pp0_iter2_reg)
    begin
                ap_predicate_op216_store_state8 <= ((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op217_store_state8_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, or_cond_i_i_reg_1635_pp0_iter2_reg)
    begin
                ap_predicate_op217_store_state8 <= ((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond1_fu_482_p2)
    begin
        if (((exitcond1_fu_482_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge2_i_i_fu_1248_p2 <= (tmp_122_reg_1814 xor p_Result_s_reg_1807);
    brmerge3_i_i_fu_1257_p2 <= (tmp_122_reg_1814 or p_Result_not_fu_1252_p2);
    brmerge_fu_905_p2 <= (tmp_64_fu_858_p2 or tmp_146_0_not_reg_1601);
    col_assign_3_t_fu_961_p2 <= std_logic_vector(unsigned(tmp_72_fu_472_p2) - unsigned(tmp_118_fu_950_p1));
        col_assign_cast_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_fu_939_p3),32));

    col_buf_0_val_0_0_fu_995_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1655_pp0_iter1_reg(0) = '1') else 
        tmp_82_fu_984_p5;
    col_buf_0_val_1_0_fu_1013_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1655_pp0_iter1_reg(0) = '1') else 
        tmp_83_fu_1002_p5;
    col_buf_0_val_2_0_fu_1031_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1655_pp0_iter1_reg(0) = '1') else 
        tmp_84_fu_1020_p5;
    exitcond1_fu_482_p2 <= "1" when (t_V_reg_319 = tmp_fu_370_p2) else "0";
    exitcond_fu_811_p2 <= "1" when (t_V_3_reg_330 = widthloop_fu_352_p2) else "0";

    grp_fu_1287_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1287_ce <= ap_const_logic_1;
        else 
            grp_fu_1287_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1287_p0 <= tmp_231_0_1_cast_reg_1453(2 - 1 downto 0);
    grp_fu_1287_p1 <= grp_fu_1287_p10(8 - 1 downto 0);
    grp_fu_1287_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_166),10));

    grp_fu_1294_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1294_ce <= ap_const_logic_1;
        else 
            grp_fu_1294_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1294_p0 <= tmp_231_0_2_cast_reg_1458(2 - 1 downto 0);
    grp_fu_1294_p1 <= grp_fu_1294_p10(8 - 1 downto 0);
    grp_fu_1294_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1737),10));

    grp_fu_1300_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1300_ce <= ap_const_logic_1;
        else 
            grp_fu_1300_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1300_p0 <= tmp_231_1_cast_reg_1463(3 - 1 downto 0);
    grp_fu_1300_p1 <= grp_fu_1300_p10(8 - 1 downto 0);
    grp_fu_1300_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_162),11));

    grp_fu_1307_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1307_ce <= ap_const_logic_1;
        else 
            grp_fu_1307_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1307_p0 <= tmp_231_2_cast_reg_1473(2 - 1 downto 0);
    grp_fu_1307_p1 <= grp_fu_1307_p10(8 - 1 downto 0);
    grp_fu_1307_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_154),10));
    grp_fu_1307_p2 <= grp_fu_1307_p20(8 - 1 downto 0);
    grp_fu_1307_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1725_pp0_iter6_reg),10));

    grp_fu_1314_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1314_ce <= ap_const_logic_1;
        else 
            grp_fu_1314_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1314_p0 <= tmp_231_1_2_cast_reg_1468(4 - 1 downto 0);
    grp_fu_1314_p1 <= grp_fu_1314_p10(8 - 1 downto 0);
    grp_fu_1314_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_reg_1731_pp0_iter5_reg),12));

    grp_fu_1321_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1321_ce <= ap_const_logic_1;
        else 
            grp_fu_1321_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1321_p0 <= tmp_231_2_1_cast_reg_1478(3 - 1 downto 0);
    grp_fu_1321_p1 <= grp_fu_1321_p10(8 - 1 downto 0);
    grp_fu_1321_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_9_reg_1757),11));
    i_V_fu_487_p2 <= std_logic_vector(unsigned(t_V_reg_319) + unsigned(ap_const_lv11_1));
    icmp4_fu_832_p2 <= "0" when (tmp_115_fu_822_p4 = ap_const_lv10_0) else "1";
    icmp_fu_508_p2 <= "0" when (tmp_97_fu_498_p4 = ap_const_lv10_0) else "1";
    j_V_fu_816_p2 <= std_logic_vector(unsigned(t_V_3_reg_330) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_81_fu_954_p1(11 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1666;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, ap_block_pp0_stage0_11001, tmp_59_reg_1517, exitcond_reg_1611_pp0_iter1_reg, or_cond_i_i_reg_1635_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1635_pp0_iter1_reg = ap_const_lv1_1) and (tmp_59_reg_1517 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, ap_block_pp0_stage0_11001, tmp_59_reg_1517, exitcond_reg_1611_pp0_iter1_reg, or_cond_i_i_reg_1635_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter1_reg = ap_const_lv1_1) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1635_pp0_iter1_reg = ap_const_lv1_1) and (tmp_59_reg_1517 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (exitcond_reg_1611_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_81_fu_954_p1(11 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1679_pp0_iter2_reg;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, ap_block_pp0_stage0_11001, tmp_190_1_reg_1521, or_cond_i_i_reg_1635_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (tmp_190_1_reg_1521 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, reg_341_pp0_iter2_reg, tmp_190_1_reg_1521, k_buf_0_val_3_load_reg_1691, ap_condition_1246)
    begin
        if ((ap_const_boolean_1 = ap_condition_1246)) then
            if (((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_1691;
            elsif (((tmp_190_1_reg_1521 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0))) then 
                k_buf_0_val_4_d1 <= reg_341_pp0_iter2_reg;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, ap_block_pp0_stage0_11001, tmp_190_1_reg_1521, or_cond_i_i_reg_1635_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (tmp_190_1_reg_1521 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_81_fu_954_p1(11 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1685_pp0_iter2_reg;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, ap_block_pp0_stage0_11001, tmp_59_reg_1517, or_cond_i_i_reg_1635_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (tmp_59_reg_1517 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, reg_341_pp0_iter2_reg, tmp_59_reg_1517, k_buf_0_val_4_load_reg_1704, ap_condition_1246)
    begin
        if ((ap_const_boolean_1 = ap_condition_1246)) then
            if (((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_1704;
            elsif (((tmp_59_reg_1517 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0))) then 
                k_buf_0_val_5_d1 <= reg_341_pp0_iter2_reg;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_reg_1512, tmp_s_reg_1507, ap_block_pp0_stage0_11001, tmp_59_reg_1517, or_cond_i_i_reg_1635_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_cond_i_i_reg_1635_pp0_iter2_reg = ap_const_lv1_1) and (tmp_59_reg_1517 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i484_i_1_fu_684_p2 <= (tmp_216_1_fu_680_p2 and rev12_fu_674_p2);
    or_cond_i484_i_2_fu_707_p2 <= (tmp_216_2_fu_703_p2 and rev13_fu_697_p2);
    or_cond_i484_i_fu_642_p2 <= (tmp_69_fu_638_p2 and rev_fu_632_p2);
    or_cond_i_fu_910_p2 <= (icmp_reg_1512 and icmp4_fu_832_p2);
    or_cond_i_i_fu_863_p2 <= (tmp_64_fu_858_p2 and rev14_fu_852_p2);
    p_Result_not_fu_1252_p2 <= (p_Result_s_reg_1807 xor ap_const_lv1_1);
        p_Val2_1_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1802),16));

    p_Val2_s_fu_1214_p2 <= std_logic_vector(signed(grp_fu_1314_p3) + signed(tmp26_cast_fu_1211_p1));
    p_assign_1_fu_877_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_3_cast_fu_807_p1));
    p_assign_2_fu_900_p2 <= std_logic_vector(unsigned(tmp_68_cast_cast_fu_462_p1) - unsigned(p_p2_i_i_cast_cast_fu_891_p1));
    p_assign_6_1_fu_551_p2 <= std_logic_vector(unsigned(t_V_cast_fu_478_p1) + unsigned(ap_const_lv12_FFE));
    p_assign_6_2_fu_588_p2 <= std_logic_vector(unsigned(t_V_cast_fu_478_p1) + unsigned(ap_const_lv12_FFD));
    p_assign_7_1_fu_565_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) - unsigned(t_V_cast_fu_478_p1));
    p_assign_7_2_fu_602_p2 <= std_logic_vector(unsigned(ap_const_lv12_3) - unsigned(t_V_cast_fu_478_p1));
    p_assign_7_fu_545_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_cast_fu_478_p1));
    p_assign_8_fu_662_p2 <= std_logic_vector(unsigned(tmp_227_cast_cast_fu_402_p1) - unsigned(p_p2_i485_i_cast_cast_fu_653_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, or_cond_i_reg_1662_pp0_iter8_reg)
    begin
        if (((or_cond_i_reg_1662_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_mux_i_i_fu_1262_p3 when (brmerge3_i_i_fu_1257_p2(0) = '1') else 
        p_i_i_fu_1270_p3;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter9, or_cond_i_reg_1662_pp0_iter8_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_1662_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_fu_1270_p3 <= 
        ap_const_lv16_8000 when (underflow_fu_1243_p2(0) = '1') else 
        p_Val2_1_fu_1235_p1;
    p_mux_i_i_fu_1262_p3 <= 
        ap_const_lv16_7FFF when (brmerge2_i_i_fu_1248_p2(0) = '1') else 
        p_Val2_1_fu_1235_p1;
    p_not1_i_i_fu_1238_p2 <= (tmp_122_reg_1814 xor ap_const_lv1_1);
    p_p2_i485_i_1_fu_571_p3 <= 
        p_assign_7_1_fu_565_p2 when (tmp_101_fu_557_p3(0) = '1') else 
        p_assign_6_1_fu_551_p2;
    p_p2_i485_i_2_fu_608_p3 <= 
        p_assign_7_2_fu_602_p2 when (tmp_104_fu_594_p3(0) = '1') else 
        p_assign_6_2_fu_588_p2;
        p_p2_i485_i_cast_cast_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i485_i_fu_648_p3),13));

    p_p2_i485_i_fu_648_p3 <= 
        p_assign_7_reg_1545 when (tmp_99_reg_1540(0) = '1') else 
        tmp_67_reg_1532;
        p_p2_i_i_cast_cast_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_883_p3),13));

    p_p2_i_i_fu_883_p3 <= 
        p_assign_1_fu_877_p2 when (tmp_117_fu_869_p3(0) = '1') else 
        ImagLoc_x_fu_838_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_reg_1611, or_cond_i_i_reg_1635, icmp_reg_1512, tmp_s_reg_1507)
    begin
        if ((((tmp_s_reg_1507 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_1) and (or_cond_i_i_reg_1635 = ap_const_lv1_1) and (exitcond_reg_1611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((or_cond_i_i_reg_1635 = ap_const_lv1_1) and (icmp_reg_1512 = ap_const_lv1_0) and (exitcond_reg_1611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op179_read_state6, ap_predicate_op180_read_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op180_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op179_read_state6 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_0_cast_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_170),9));
    r_V_2_fu_1150_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(r_V_0_cast_fu_1146_p1));
    rev12_fu_674_p2 <= (tmp_100_fu_667_p3 xor ap_const_lv1_1);
    rev13_fu_697_p2 <= (tmp_103_fu_690_p3 xor ap_const_lv1_1);
    rev14_fu_852_p2 <= (tmp_116_fu_844_p3 xor ap_const_lv1_1);
    rev_fu_632_p2 <= (tmp_98_fu_625_p3 xor ap_const_lv1_1);
    row_assign_10_1_t_fu_761_p2 <= std_logic_vector(unsigned(tmp_54_fu_406_p2) - unsigned(tmp_76_fu_753_p3));
    row_assign_10_2_t_fu_787_p2 <= std_logic_vector(unsigned(tmp_54_fu_406_p2) - unsigned(tmp_89_fu_779_p3));
    sel_tmp7_fu_929_p2 <= (tmp_64_not_fu_924_p2 or tmp_116_reg_1625);
    sel_tmp8_fu_934_p2 <= (tmp_66_reg_1645 and sel_tmp7_fu_929_p2);
    sel_tmp_fu_918_p3 <= 
        ImagLoc_x_cast_cast_fu_915_p1 when (or_cond_i_i_reg_1635(0) = '1') else 
        p_assign_2_reg_1650;
    src_kernel_win_0_va_6_fu_1082_p3 <= 
        tmp_85_fu_1074_p5 when (tmp_62_reg_1525(0) = '1') else 
        col_buf_0_val_0_0_reg_1696;
    src_kernel_win_0_va_7_fu_1096_p3 <= 
        tmp_90_fu_1088_p5 when (tmp_62_reg_1525(0) = '1') else 
        col_buf_0_val_1_0_reg_1709;
    src_kernel_win_0_va_8_fu_1110_p3 <= 
        tmp_91_fu_1102_p5 when (tmp_62_reg_1525(0) = '1') else 
        col_buf_0_val_2_0_reg_1717;
    t_V_3_cast_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_3_reg_330),12));
    t_V_cast_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_319),12));
        tmp26_cast_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1321_p3),12));

    tmp_100_fu_667_p3 <= p_assign_6_1_reg_1550(11 downto 11);
    tmp_101_fu_557_p3 <= p_assign_6_1_fu_551_p2(11 downto 11);
    tmp_102_fu_584_p1 <= p_p2_i485_i_1_fu_571_p3(2 - 1 downto 0);
    tmp_103_fu_690_p3 <= p_assign_6_2_reg_1568(11 downto 11);
    tmp_104_fu_594_p3 <= p_assign_6_2_fu_588_p2(11 downto 11);
    tmp_105_fu_621_p1 <= p_p2_i485_i_2_fu_608_p3(2 - 1 downto 0);
    tmp_106_fu_797_p2 <= std_logic_vector(unsigned(tmp_80_fu_366_p1) + unsigned(ap_const_lv2_3));
    tmp_107_fu_713_p1 <= tmp_67_reg_1532(2 - 1 downto 0);
    tmp_108_fu_716_p1 <= p_p2_i485_i_fu_648_p3(2 - 1 downto 0);
    tmp_109_fu_720_p1 <= p_assign_8_fu_662_p2(2 - 1 downto 0);
    tmp_110_fu_724_p3 <= 
        tmp_108_fu_716_p1 when (tmp_71_fu_657_p2(0) = '1') else 
        tmp_109_fu_720_p1;
    tmp_111_fu_732_p3 <= 
        tmp_107_fu_713_p1 when (or_cond_i484_i_fu_642_p2(0) = '1') else 
        tmp_110_fu_724_p3;
    tmp_112_fu_802_p2 <= std_logic_vector(unsigned(tmp_106_fu_797_p2) - unsigned(tmp_111_reg_1586));
    tmp_113_fu_750_p1 <= p_assign_6_1_reg_1550(2 - 1 downto 0);
    tmp_114_fu_776_p1 <= p_assign_6_2_reg_1568(2 - 1 downto 0);
    tmp_115_fu_822_p4 <= t_V_3_reg_330(10 downto 1);
    tmp_116_fu_844_p3 <= ImagLoc_x_fu_838_p2(11 downto 11);
    tmp_117_fu_869_p3 <= ImagLoc_x_fu_838_p2(11 downto 11);
    tmp_118_fu_950_p1 <= x_fu_939_p3(2 - 1 downto 0);
    tmp_146_0_not_fu_792_p2 <= (tmp_s_reg_1507 xor ap_const_lv1_1);
    tmp_190_1_fu_520_p2 <= "1" when (t_V_reg_319 = ap_const_lv11_0) else "0";
    tmp_216_1_fu_680_p2 <= "1" when (signed(p_assign_6_1_reg_1550) < signed(tmp_92_fu_384_p1)) else "0";
    tmp_216_2_fu_703_p2 <= "1" when (signed(p_assign_6_2_reg_1568) < signed(tmp_92_fu_384_p1)) else "0";
    tmp_225_1_fu_579_p2 <= "1" when (signed(p_p2_i485_i_1_fu_571_p3) < signed(tmp_92_fu_384_p1)) else "0";
    tmp_225_2_fu_616_p2 <= "1" when (signed(p_p2_i485_i_2_fu_608_p3) < signed(tmp_92_fu_384_p1)) else "0";
    tmp_227_cast_cast_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_396_p2),13));
        tmp_231_0_1_cast_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        tmp_231_0_2_cast_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    tmp_231_1_2_cast_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        tmp_231_1_cast_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    tmp_231_2_1_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        tmp_231_2_cast_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    tmp_50_fu_388_p3 <= (tmp_77_fu_358_p1 & ap_const_lv1_0);
    tmp_53_fu_396_p2 <= std_logic_vector(unsigned(ap_const_lv12_2) + unsigned(tmp_50_fu_388_p3));
    tmp_54_fu_406_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_78_fu_362_p1));
    tmp_55_fu_448_p3 <= (tmp_75_fu_348_p1 & ap_const_lv1_0);
    tmp_56_fu_456_p2 <= std_logic_vector(signed(ap_const_lv12_FFE) + signed(tmp_55_fu_448_p3));
    tmp_59_fu_514_p2 <= "1" when (t_V_reg_319 = ap_const_lv11_1) else "0";
    tmp_62_fu_526_p2 <= "1" when (unsigned(t_V_reg_319) > unsigned(tmp_77_fu_358_p1)) else "0";
    tmp_64_fu_858_p2 <= "1" when (signed(ImagLoc_x_fu_838_p2) < signed(tmp_86_fu_376_p1)) else "0";
    tmp_64_not_fu_924_p2 <= (tmp_64_reg_1630 xor ap_const_lv1_1);
    tmp_66_fu_895_p2 <= "1" when (signed(p_p2_i_i_fu_883_p3) < signed(tmp_86_fu_376_p1)) else "0";
    tmp_67_fu_531_p2 <= std_logic_vector(unsigned(t_V_cast_fu_478_p1) + unsigned(ap_const_lv12_FFF));
    tmp_68_cast_cast_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_456_p2),13));
    tmp_68_fu_416_p3 <= (tmp_94_fu_412_p1 & ap_const_lv1_0);
    tmp_69_fu_638_p2 <= "1" when (signed(tmp_67_reg_1532) < signed(tmp_92_fu_384_p1)) else "0";
    tmp_70_fu_466_p2 <= (tmp_68_fu_416_p3 xor ap_const_lv2_2);
    tmp_71_fu_657_p2 <= "1" when (signed(p_p2_i485_i_fu_648_p3) < signed(tmp_92_fu_384_p1)) else "0";
    tmp_72_fu_472_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_88_fu_380_p1));
    tmp_73_fu_740_p2 <= std_logic_vector(unsigned(tmp_70_fu_466_p2) - unsigned(tmp_102_reg_1562));
    tmp_74_fu_744_p3 <= 
        tmp_102_reg_1562 when (tmp_225_1_reg_1557(0) = '1') else 
        tmp_73_fu_740_p2;
    tmp_75_fu_348_p1 <= p_src_cols_V_read(11 - 1 downto 0);
    tmp_76_fu_753_p3 <= 
        tmp_113_fu_750_p1 when (or_cond_i484_i_1_fu_684_p2(0) = '1') else 
        tmp_74_fu_744_p3;
    tmp_77_fu_358_p1 <= p_src_rows_V_read(11 - 1 downto 0);
    tmp_78_fu_362_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_79_fu_766_p2 <= std_logic_vector(unsigned(tmp_70_fu_466_p2) - unsigned(tmp_105_reg_1580));
    tmp_80_fu_366_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_81_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_946_p1),64));
    tmp_86_fu_376_p1 <= p_src_cols_V_read(12 - 1 downto 0);
    tmp_87_fu_770_p3 <= 
        tmp_105_reg_1580 when (tmp_225_2_reg_1575(0) = '1') else 
        tmp_79_fu_766_p2;
    tmp_88_fu_380_p1 <= p_src_cols_V_read(2 - 1 downto 0);
    tmp_89_fu_779_p3 <= 
        tmp_114_fu_776_p1 when (or_cond_i484_i_2_fu_707_p2(0) = '1') else 
        tmp_87_fu_770_p3;
    tmp_92_fu_384_p1 <= p_src_rows_V_read(12 - 1 downto 0);
    tmp_94_fu_412_p1 <= p_src_rows_V_read(1 - 1 downto 0);
    tmp_97_fu_498_p4 <= t_V_reg_319(10 downto 1);
    tmp_98_fu_625_p3 <= tmp_67_reg_1532(11 downto 11);
    tmp_fu_370_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_77_fu_358_p1));
    tmp_s_fu_493_p2 <= "1" when (unsigned(t_V_reg_319) < unsigned(tmp_77_fu_358_p1)) else "0";
    underflow_fu_1243_p2 <= (p_not1_i_i_fu_1238_p2 and p_Result_s_reg_1807);
    widthloop_fu_352_p2 <= std_logic_vector(unsigned(ap_const_lv11_2) + unsigned(tmp_75_fu_348_p1));
    x_fu_939_p3 <= 
        p_p2_i_i_cast_cast_reg_1640 when (sel_tmp8_fu_934_p2(0) = '1') else 
        sel_tmp_fu_918_p3;
end behav;
