// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _gradient_decompositi_HH_
#define _gradient_decompositi_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct gradient_decompositi : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > gx_rows_V;
    sc_in< sc_lv<32> > gx_cols_V;
    sc_in< sc_lv<16> > gx_data_stream_V_dout;
    sc_in< sc_logic > gx_data_stream_V_empty_n;
    sc_out< sc_logic > gx_data_stream_V_read;
    sc_in< sc_lv<16> > gy_data_stream_V_dout;
    sc_in< sc_logic > gy_data_stream_V_empty_n;
    sc_out< sc_logic > gy_data_stream_V_read;
    sc_out< sc_lv<16> > gd_data_stream_V_din;
    sc_in< sc_logic > gd_data_stream_V_full_n;
    sc_out< sc_logic > gd_data_stream_V_write;


    // Module declarations
    gradient_decompositi(sc_module_name name);
    SC_HAS_PROCESS(gradient_decompositi);

    ~gradient_decompositi();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > gx_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_206_p2;
    sc_signal< sc_logic > gy_data_stream_V_blk_n;
    sc_signal< sc_logic > gd_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > i_V_fu_200_p2;
    sc_signal< sc_lv<32> > i_V_reg_559;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > j_V_fu_211_p2;
    sc_signal< sc_lv<32> > j_V_reg_567;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<16> > tmp_67_reg_572;
    sc_signal< sc_lv<16> > tmp_68_reg_581;
    sc_signal< sc_lv<16> > xs_V_3_fu_217_p2;
    sc_signal< sc_lv<16> > xs_V_3_reg_590;
    sc_signal< sc_lv<1> > p_Result_s_reg_595;
    sc_signal< sc_lv<16> > xs_V_4_fu_231_p2;
    sc_signal< sc_lv<16> > xs_V_4_reg_601;
    sc_signal< sc_lv<1> > p_Result_2_reg_606;
    sc_signal< sc_lv<1> > tmp_62_fu_398_p2;
    sc_signal< sc_lv<1> > tmp_62_reg_612;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > sel_tmp4_fu_493_p3;
    sc_signal< sc_lv<2> > sel_tmp4_reg_617;
    sc_signal< sc_lv<1> > sel_tmp8_fu_513_p2;
    sc_signal< sc_lv<1> > sel_tmp8_reg_622;
    sc_signal< sc_lv<14> > abs_g1_fu_519_p2;
    sc_signal< sc_lv<14> > abs_g1_reg_627;
    sc_signal< sc_lv<32> > t_V_reg_173;
    sc_signal< sc_lv<32> > t_V_3_reg_184;
    sc_signal< sc_lv<1> > exitcond8_fu_195_p2;
    sc_signal< sc_lv<16> > p_Result_3_fu_245_p4;
    sc_signal< sc_lv<16> > p_Result_4_fu_260_p4;
    sc_signal< sc_lv<16> > abs_gy_fu_269_p3;
    sc_signal< sc_lv<16> > abs_gx_fu_254_p3;
    sc_signal< sc_lv<1> > tmp_55_fu_294_p3;
    sc_signal< sc_lv<1> > tmp_53_fu_289_p2;
    sc_signal< sc_lv<1> > rev_fu_301_p2;
    sc_signal< sc_lv<1> > tmp_56_fu_313_p2;
    sc_signal< sc_lv<1> > or_cond_fu_307_p2;
    sc_signal< sc_lv<1> > or_cond8_fu_318_p2;
    sc_signal< sc_lv<1> > tmp_57_fu_329_p2;
    sc_signal< sc_lv<16> > tmp_58_fu_340_p2;
    sc_signal< sc_lv<1> > or_cond6_fu_334_p2;
    sc_signal< sc_lv<1> > tmp_59_fu_344_p3;
    sc_signal< sc_lv<17> > tmp_60_fu_366_p3;
    sc_signal< sc_lv<17> > tmp_103_cast_fu_358_p1;
    sc_signal< sc_lv<1> > ult_fu_374_p2;
    sc_signal< sc_lv<1> > rev9_fu_380_p2;
    sc_signal< sc_lv<17> > tmp_104_cast_fu_362_p1;
    sc_signal< sc_lv<17> > tmp_61_fu_390_p3;
    sc_signal< sc_lv<1> > tmp_63_fu_412_p3;
    sc_signal< sc_lv<1> > rev10_fu_419_p2;
    sc_signal< sc_lv<1> > tmp_64_fu_430_p2;
    sc_signal< sc_lv<1> > or_cond9_fu_425_p2;
    sc_signal< sc_lv<1> > or_cond1_fu_435_p2;
    sc_signal< sc_lv<1> > ult1_fu_447_p2;
    sc_signal< sc_lv<1> > rev11_fu_453_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_283_p2;
    sc_signal< sc_lv<1> > or_cond3_fu_323_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_467_p2;
    sc_signal< sc_lv<2> > dir_g_cast_fu_386_p1;
    sc_signal< sc_lv<2> > dir_g_3_cast_fu_459_p3;
    sc_signal< sc_lv<1> > or_cond7_fu_352_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_481_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_487_p2;
    sc_signal< sc_lv<2> > dir_g_1_fu_404_p3;
    sc_signal< sc_lv<2> > sel_tmp1_fu_473_p3;
    sc_signal< sc_lv<1> > sel_tmp7_demorgan_fu_501_p2;
    sc_signal< sc_lv<1> > or_cond2_fu_441_p2;
    sc_signal< sc_lv<1> > sel_tmp7_fu_507_p2;
    sc_signal< sc_lv<14> > tmp_fu_275_p1;
    sc_signal< sc_lv<14> > tmp_54_fu_279_p1;
    sc_signal< sc_lv<2> > dir_g_2_fu_525_p3;
    sc_signal< sc_lv<2> > dir_g_6_fu_532_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_abs_g1_fu_519_p2();
    void thread_abs_gx_fu_254_p3();
    void thread_abs_gy_fu_269_p3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_state1();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dir_g_1_fu_404_p3();
    void thread_dir_g_2_fu_525_p3();
    void thread_dir_g_3_cast_fu_459_p3();
    void thread_dir_g_6_fu_532_p3();
    void thread_dir_g_cast_fu_386_p1();
    void thread_exitcond8_fu_195_p2();
    void thread_exitcond_fu_206_p2();
    void thread_gd_data_stream_V_blk_n();
    void thread_gd_data_stream_V_din();
    void thread_gd_data_stream_V_write();
    void thread_gx_data_stream_V_blk_n();
    void thread_gx_data_stream_V_read();
    void thread_gy_data_stream_V_blk_n();
    void thread_gy_data_stream_V_read();
    void thread_i_V_fu_200_p2();
    void thread_internal_ap_ready();
    void thread_j_V_fu_211_p2();
    void thread_or_cond1_fu_435_p2();
    void thread_or_cond2_fu_441_p2();
    void thread_or_cond3_fu_323_p2();
    void thread_or_cond6_fu_334_p2();
    void thread_or_cond7_fu_352_p2();
    void thread_or_cond8_fu_318_p2();
    void thread_or_cond9_fu_425_p2();
    void thread_or_cond_fu_307_p2();
    void thread_p_Result_3_fu_245_p4();
    void thread_p_Result_4_fu_260_p4();
    void thread_real_start();
    void thread_rev10_fu_419_p2();
    void thread_rev11_fu_453_p2();
    void thread_rev9_fu_380_p2();
    void thread_rev_fu_301_p2();
    void thread_sel_tmp1_fu_473_p3();
    void thread_sel_tmp2_fu_481_p2();
    void thread_sel_tmp3_fu_487_p2();
    void thread_sel_tmp4_fu_493_p3();
    void thread_sel_tmp7_demorgan_fu_501_p2();
    void thread_sel_tmp7_fu_507_p2();
    void thread_sel_tmp8_fu_513_p2();
    void thread_sel_tmp_fu_467_p2();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_103_cast_fu_358_p1();
    void thread_tmp_104_cast_fu_362_p1();
    void thread_tmp_53_fu_289_p2();
    void thread_tmp_54_fu_279_p1();
    void thread_tmp_55_fu_294_p3();
    void thread_tmp_56_fu_313_p2();
    void thread_tmp_57_fu_329_p2();
    void thread_tmp_58_fu_340_p2();
    void thread_tmp_59_fu_344_p3();
    void thread_tmp_60_fu_366_p3();
    void thread_tmp_61_fu_390_p3();
    void thread_tmp_62_fu_398_p2();
    void thread_tmp_63_fu_412_p3();
    void thread_tmp_64_fu_430_p2();
    void thread_tmp_fu_275_p1();
    void thread_tmp_s_fu_283_p2();
    void thread_ult1_fu_447_p2();
    void thread_ult_fu_374_p2();
    void thread_xs_V_3_fu_217_p2();
    void thread_xs_V_4_fu_231_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
