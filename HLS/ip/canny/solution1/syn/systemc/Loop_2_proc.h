// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_2_proc_HH_
#define _Loop_2_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_2_proc : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<20> > packets_cast_loc_dout;
    sc_in< sc_logic > packets_cast_loc_empty_n;
    sc_out< sc_logic > packets_cast_loc_read;
    sc_in< sc_lv<8> > canny_edges_data_stream_0_V_dout;
    sc_in< sc_logic > canny_edges_data_stream_0_V_empty_n;
    sc_out< sc_logic > canny_edges_data_stream_0_V_read;
    sc_out< sc_lv<32> > out_stream_data_V_TDATA;
    sc_out< sc_logic > out_stream_data_V_TVALID;
    sc_in< sc_logic > out_stream_data_V_TREADY;


    // Module declarations
    Loop_2_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_2_proc);

    ~Loop_2_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > out_stream_data_V_1_data_out;
    sc_signal< sc_logic > out_stream_data_V_1_vld_in;
    sc_signal< sc_logic > out_stream_data_V_1_vld_out;
    sc_signal< sc_logic > out_stream_data_V_1_ack_in;
    sc_signal< sc_logic > out_stream_data_V_1_ack_out;
    sc_signal< sc_lv<32> > out_stream_data_V_1_payload_A;
    sc_signal< sc_lv<32> > out_stream_data_V_1_payload_B;
    sc_signal< sc_logic > out_stream_data_V_1_sel_rd;
    sc_signal< sc_logic > out_stream_data_V_1_sel_wr;
    sc_signal< sc_logic > out_stream_data_V_1_sel;
    sc_signal< sc_logic > out_stream_data_V_1_load_A;
    sc_signal< sc_logic > out_stream_data_V_1_load_B;
    sc_signal< sc_lv<2> > out_stream_data_V_1_state;
    sc_signal< sc_logic > out_stream_data_V_1_state_cmp_full;
    sc_signal< sc_logic > packets_cast_loc_blk_n;
    sc_signal< sc_logic > canny_edges_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_116_i_i_fu_110_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > out_stream_data_V_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<20> > packets_cast_loc_rea_reg_131;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<19> > r_fu_115_p2;
    sc_signal< sc_lv<19> > r_reg_139;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<8> > tmp_reg_144;
    sc_signal< sc_lv<8> > tmp_69_reg_149;
    sc_signal< sc_lv<8> > tmp_70_reg_154;
    sc_signal< sc_lv<32> > p_Result_s_fu_121_p5;
    sc_signal< sc_lv<19> > p_0169_rec_i_i_reg_95;
    sc_signal< sc_lv<20> > r1_cast_i_i_fu_106_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<19> ap_const_lv19_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_state1();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_canny_edges_data_stream_0_V_blk_n();
    void thread_canny_edges_data_stream_0_V_read();
    void thread_out_stream_data_V_1_ack_in();
    void thread_out_stream_data_V_1_ack_out();
    void thread_out_stream_data_V_1_data_out();
    void thread_out_stream_data_V_1_load_A();
    void thread_out_stream_data_V_1_load_B();
    void thread_out_stream_data_V_1_sel();
    void thread_out_stream_data_V_1_state_cmp_full();
    void thread_out_stream_data_V_1_vld_in();
    void thread_out_stream_data_V_1_vld_out();
    void thread_out_stream_data_V_TDATA();
    void thread_out_stream_data_V_TDATA_blk_n();
    void thread_out_stream_data_V_TVALID();
    void thread_p_Result_s_fu_121_p5();
    void thread_packets_cast_loc_blk_n();
    void thread_packets_cast_loc_read();
    void thread_r1_cast_i_i_fu_106_p1();
    void thread_r_fu_115_p2();
    void thread_tmp_116_i_i_fu_110_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
