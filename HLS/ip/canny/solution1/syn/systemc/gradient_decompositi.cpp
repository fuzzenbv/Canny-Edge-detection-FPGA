// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gradient_decompositi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gradient_decompositi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gradient_decompositi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> gradient_decompositi::ap_ST_fsm_state1 = "1";
const sc_lv<5> gradient_decompositi::ap_ST_fsm_state2 = "10";
const sc_lv<5> gradient_decompositi::ap_ST_fsm_state3 = "100";
const sc_lv<5> gradient_decompositi::ap_ST_fsm_state4 = "1000";
const sc_lv<5> gradient_decompositi::ap_ST_fsm_state5 = "10000";
const sc_lv<32> gradient_decompositi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gradient_decompositi::ap_const_lv32_2 = "10";
const sc_lv<1> gradient_decompositi::ap_const_lv1_0 = "0";
const sc_lv<32> gradient_decompositi::ap_const_lv32_4 = "100";
const sc_lv<32> gradient_decompositi::ap_const_lv32_1 = "1";
const sc_lv<32> gradient_decompositi::ap_const_lv32_3 = "11";
const sc_lv<1> gradient_decompositi::ap_const_lv1_1 = "1";
const sc_lv<16> gradient_decompositi::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> gradient_decompositi::ap_const_lv32_F = "1111";
const sc_lv<16> gradient_decompositi::ap_const_lv16_1 = "1";
const sc_lv<2> gradient_decompositi::ap_const_lv2_2 = "10";
const sc_lv<2> gradient_decompositi::ap_const_lv2_1 = "1";
const sc_lv<2> gradient_decompositi::ap_const_lv2_3 = "11";
const sc_lv<2> gradient_decompositi::ap_const_lv2_0 = "00";
const bool gradient_decompositi::ap_const_boolean_1 = true;

gradient_decompositi::gradient_decompositi(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_abs_g1_fu_519_p2);
    sensitive << ( tmp_fu_275_p1 );
    sensitive << ( tmp_54_fu_279_p1 );

    SC_METHOD(thread_abs_gx_fu_254_p3);
    sensitive << ( tmp_67_reg_572 );
    sensitive << ( p_Result_s_reg_595 );
    sensitive << ( p_Result_3_fu_245_p4 );

    SC_METHOD(thread_abs_gy_fu_269_p3);
    sensitive << ( tmp_68_reg_581 );
    sensitive << ( p_Result_2_reg_606 );
    sensitive << ( p_Result_4_fu_260_p4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( gx_data_stream_V_empty_n );
    sensitive << ( gy_data_stream_V_empty_n );
    sensitive << ( exitcond_fu_206_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_195_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_dir_g_1_fu_404_p3);
    sensitive << ( tmp_62_fu_398_p2 );

    SC_METHOD(thread_dir_g_2_fu_525_p3);
    sensitive << ( tmp_62_reg_612 );

    SC_METHOD(thread_dir_g_3_cast_fu_459_p3);
    sensitive << ( rev11_fu_453_p2 );

    SC_METHOD(thread_dir_g_6_fu_532_p3);
    sensitive << ( sel_tmp4_reg_617 );
    sensitive << ( sel_tmp8_reg_622 );
    sensitive << ( dir_g_2_fu_525_p3 );

    SC_METHOD(thread_dir_g_cast_fu_386_p1);
    sensitive << ( rev9_fu_380_p2 );

    SC_METHOD(thread_exitcond8_fu_195_p2);
    sensitive << ( gx_rows_V );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_173 );

    SC_METHOD(thread_exitcond_fu_206_p2);
    sensitive << ( gx_cols_V );
    sensitive << ( gx_data_stream_V_empty_n );
    sensitive << ( gy_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_206_p2 );
    sensitive << ( t_V_3_reg_184 );

    SC_METHOD(thread_gd_data_stream_V_blk_n);
    sensitive << ( gd_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_gd_data_stream_V_din);
    sensitive << ( gd_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( abs_g1_reg_627 );
    sensitive << ( dir_g_6_fu_532_p3 );

    SC_METHOD(thread_gd_data_stream_V_write);
    sensitive << ( gd_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_gx_data_stream_V_blk_n);
    sensitive << ( gx_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_206_p2 );

    SC_METHOD(thread_gx_data_stream_V_read);
    sensitive << ( gx_data_stream_V_empty_n );
    sensitive << ( gy_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_206_p2 );

    SC_METHOD(thread_gy_data_stream_V_blk_n);
    sensitive << ( gy_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_206_p2 );

    SC_METHOD(thread_gy_data_stream_V_read);
    sensitive << ( gx_data_stream_V_empty_n );
    sensitive << ( gy_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_206_p2 );

    SC_METHOD(thread_i_V_fu_200_p2);
    sensitive << ( t_V_reg_173 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_195_p2 );

    SC_METHOD(thread_j_V_fu_211_p2);
    sensitive << ( t_V_3_reg_184 );

    SC_METHOD(thread_or_cond1_fu_435_p2);
    sensitive << ( tmp_57_fu_329_p2 );
    sensitive << ( tmp_64_fu_430_p2 );

    SC_METHOD(thread_or_cond2_fu_441_p2);
    sensitive << ( or_cond9_fu_425_p2 );
    sensitive << ( or_cond1_fu_435_p2 );

    SC_METHOD(thread_or_cond3_fu_323_p2);
    sensitive << ( or_cond_fu_307_p2 );
    sensitive << ( or_cond8_fu_318_p2 );

    SC_METHOD(thread_or_cond6_fu_334_p2);
    sensitive << ( tmp_53_fu_289_p2 );
    sensitive << ( tmp_57_fu_329_p2 );

    SC_METHOD(thread_or_cond7_fu_352_p2);
    sensitive << ( or_cond6_fu_334_p2 );
    sensitive << ( tmp_59_fu_344_p3 );

    SC_METHOD(thread_or_cond8_fu_318_p2);
    sensitive << ( p_Result_s_reg_595 );
    sensitive << ( tmp_56_fu_313_p2 );

    SC_METHOD(thread_or_cond9_fu_425_p2);
    sensitive << ( p_Result_2_reg_606 );
    sensitive << ( rev10_fu_419_p2 );

    SC_METHOD(thread_or_cond_fu_307_p2);
    sensitive << ( tmp_53_fu_289_p2 );
    sensitive << ( rev_fu_301_p2 );

    SC_METHOD(thread_p_Result_3_fu_245_p4);
    sensitive << ( xs_V_3_reg_590 );

    SC_METHOD(thread_p_Result_4_fu_260_p4);
    sensitive << ( xs_V_4_reg_601 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_rev10_fu_419_p2);
    sensitive << ( tmp_63_fu_412_p3 );

    SC_METHOD(thread_rev11_fu_453_p2);
    sensitive << ( ult1_fu_447_p2 );

    SC_METHOD(thread_rev9_fu_380_p2);
    sensitive << ( ult_fu_374_p2 );

    SC_METHOD(thread_rev_fu_301_p2);
    sensitive << ( tmp_55_fu_294_p3 );

    SC_METHOD(thread_sel_tmp1_fu_473_p3);
    sensitive << ( sel_tmp_fu_467_p2 );
    sensitive << ( dir_g_cast_fu_386_p1 );
    sensitive << ( dir_g_3_cast_fu_459_p3 );

    SC_METHOD(thread_sel_tmp2_fu_481_p2);
    sensitive << ( tmp_s_fu_283_p2 );

    SC_METHOD(thread_sel_tmp3_fu_487_p2);
    sensitive << ( or_cond7_fu_352_p2 );
    sensitive << ( sel_tmp2_fu_481_p2 );

    SC_METHOD(thread_sel_tmp4_fu_493_p3);
    sensitive << ( sel_tmp3_fu_487_p2 );
    sensitive << ( dir_g_1_fu_404_p3 );
    sensitive << ( sel_tmp1_fu_473_p3 );

    SC_METHOD(thread_sel_tmp7_demorgan_fu_501_p2);
    sensitive << ( tmp_s_fu_283_p2 );
    sensitive << ( or_cond7_fu_352_p2 );

    SC_METHOD(thread_sel_tmp7_fu_507_p2);
    sensitive << ( sel_tmp7_demorgan_fu_501_p2 );

    SC_METHOD(thread_sel_tmp8_fu_513_p2);
    sensitive << ( or_cond2_fu_441_p2 );
    sensitive << ( sel_tmp7_fu_507_p2 );

    SC_METHOD(thread_sel_tmp_fu_467_p2);
    sensitive << ( tmp_s_fu_283_p2 );
    sensitive << ( or_cond3_fu_323_p2 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_103_cast_fu_358_p1);
    sensitive << ( abs_gx_fu_254_p3 );

    SC_METHOD(thread_tmp_104_cast_fu_362_p1);
    sensitive << ( abs_gy_fu_269_p3 );

    SC_METHOD(thread_tmp_53_fu_289_p2);
    sensitive << ( tmp_67_reg_572 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_54_fu_279_p1);
    sensitive << ( abs_gx_fu_254_p3 );

    SC_METHOD(thread_tmp_55_fu_294_p3);
    sensitive << ( tmp_68_reg_581 );

    SC_METHOD(thread_tmp_56_fu_313_p2);
    sensitive << ( tmp_68_reg_581 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_57_fu_329_p2);
    sensitive << ( tmp_68_reg_581 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_58_fu_340_p2);
    sensitive << ( tmp_67_reg_572 );
    sensitive << ( tmp_68_reg_581 );

    SC_METHOD(thread_tmp_59_fu_344_p3);
    sensitive << ( tmp_58_fu_340_p2 );

    SC_METHOD(thread_tmp_60_fu_366_p3);
    sensitive << ( abs_gy_fu_269_p3 );

    SC_METHOD(thread_tmp_61_fu_390_p3);
    sensitive << ( abs_gx_fu_254_p3 );

    SC_METHOD(thread_tmp_62_fu_398_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_104_cast_fu_362_p1 );
    sensitive << ( tmp_61_fu_390_p3 );

    SC_METHOD(thread_tmp_63_fu_412_p3);
    sensitive << ( tmp_67_reg_572 );

    SC_METHOD(thread_tmp_64_fu_430_p2);
    sensitive << ( tmp_67_reg_572 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_fu_275_p1);
    sensitive << ( abs_gy_fu_269_p3 );

    SC_METHOD(thread_tmp_s_fu_283_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( abs_gy_fu_269_p3 );
    sensitive << ( abs_gx_fu_254_p3 );

    SC_METHOD(thread_ult1_fu_447_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_104_cast_fu_362_p1 );
    sensitive << ( tmp_61_fu_390_p3 );

    SC_METHOD(thread_ult_fu_374_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_366_p3 );
    sensitive << ( tmp_103_cast_fu_358_p1 );

    SC_METHOD(thread_xs_V_3_fu_217_p2);
    sensitive << ( gx_data_stream_V_dout );

    SC_METHOD(thread_xs_V_4_fu_231_p2);
    sensitive << ( gy_data_stream_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( gx_data_stream_V_empty_n );
    sensitive << ( gy_data_stream_V_empty_n );
    sensitive << ( gd_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_206_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond8_fu_195_p2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gradient_decompositi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, gx_rows_V, "(port)gx_rows_V");
    sc_trace(mVcdFile, gx_cols_V, "(port)gx_cols_V");
    sc_trace(mVcdFile, gx_data_stream_V_dout, "(port)gx_data_stream_V_dout");
    sc_trace(mVcdFile, gx_data_stream_V_empty_n, "(port)gx_data_stream_V_empty_n");
    sc_trace(mVcdFile, gx_data_stream_V_read, "(port)gx_data_stream_V_read");
    sc_trace(mVcdFile, gy_data_stream_V_dout, "(port)gy_data_stream_V_dout");
    sc_trace(mVcdFile, gy_data_stream_V_empty_n, "(port)gy_data_stream_V_empty_n");
    sc_trace(mVcdFile, gy_data_stream_V_read, "(port)gy_data_stream_V_read");
    sc_trace(mVcdFile, gd_data_stream_V_din, "(port)gd_data_stream_V_din");
    sc_trace(mVcdFile, gd_data_stream_V_full_n, "(port)gd_data_stream_V_full_n");
    sc_trace(mVcdFile, gd_data_stream_V_write, "(port)gd_data_stream_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, gx_data_stream_V_blk_n, "gx_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_fu_206_p2, "exitcond_fu_206_p2");
    sc_trace(mVcdFile, gy_data_stream_V_blk_n, "gy_data_stream_V_blk_n");
    sc_trace(mVcdFile, gd_data_stream_V_blk_n, "gd_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_V_fu_200_p2, "i_V_fu_200_p2");
    sc_trace(mVcdFile, i_V_reg_559, "i_V_reg_559");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_V_fu_211_p2, "j_V_fu_211_p2");
    sc_trace(mVcdFile, j_V_reg_567, "j_V_reg_567");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_67_reg_572, "tmp_67_reg_572");
    sc_trace(mVcdFile, tmp_68_reg_581, "tmp_68_reg_581");
    sc_trace(mVcdFile, xs_V_3_fu_217_p2, "xs_V_3_fu_217_p2");
    sc_trace(mVcdFile, xs_V_3_reg_590, "xs_V_3_reg_590");
    sc_trace(mVcdFile, p_Result_s_reg_595, "p_Result_s_reg_595");
    sc_trace(mVcdFile, xs_V_4_fu_231_p2, "xs_V_4_fu_231_p2");
    sc_trace(mVcdFile, xs_V_4_reg_601, "xs_V_4_reg_601");
    sc_trace(mVcdFile, p_Result_2_reg_606, "p_Result_2_reg_606");
    sc_trace(mVcdFile, tmp_62_fu_398_p2, "tmp_62_fu_398_p2");
    sc_trace(mVcdFile, tmp_62_reg_612, "tmp_62_reg_612");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sel_tmp4_fu_493_p3, "sel_tmp4_fu_493_p3");
    sc_trace(mVcdFile, sel_tmp4_reg_617, "sel_tmp4_reg_617");
    sc_trace(mVcdFile, sel_tmp8_fu_513_p2, "sel_tmp8_fu_513_p2");
    sc_trace(mVcdFile, sel_tmp8_reg_622, "sel_tmp8_reg_622");
    sc_trace(mVcdFile, abs_g1_fu_519_p2, "abs_g1_fu_519_p2");
    sc_trace(mVcdFile, abs_g1_reg_627, "abs_g1_reg_627");
    sc_trace(mVcdFile, t_V_reg_173, "t_V_reg_173");
    sc_trace(mVcdFile, t_V_3_reg_184, "t_V_3_reg_184");
    sc_trace(mVcdFile, exitcond8_fu_195_p2, "exitcond8_fu_195_p2");
    sc_trace(mVcdFile, p_Result_3_fu_245_p4, "p_Result_3_fu_245_p4");
    sc_trace(mVcdFile, p_Result_4_fu_260_p4, "p_Result_4_fu_260_p4");
    sc_trace(mVcdFile, abs_gy_fu_269_p3, "abs_gy_fu_269_p3");
    sc_trace(mVcdFile, abs_gx_fu_254_p3, "abs_gx_fu_254_p3");
    sc_trace(mVcdFile, tmp_55_fu_294_p3, "tmp_55_fu_294_p3");
    sc_trace(mVcdFile, tmp_53_fu_289_p2, "tmp_53_fu_289_p2");
    sc_trace(mVcdFile, rev_fu_301_p2, "rev_fu_301_p2");
    sc_trace(mVcdFile, tmp_56_fu_313_p2, "tmp_56_fu_313_p2");
    sc_trace(mVcdFile, or_cond_fu_307_p2, "or_cond_fu_307_p2");
    sc_trace(mVcdFile, or_cond8_fu_318_p2, "or_cond8_fu_318_p2");
    sc_trace(mVcdFile, tmp_57_fu_329_p2, "tmp_57_fu_329_p2");
    sc_trace(mVcdFile, tmp_58_fu_340_p2, "tmp_58_fu_340_p2");
    sc_trace(mVcdFile, or_cond6_fu_334_p2, "or_cond6_fu_334_p2");
    sc_trace(mVcdFile, tmp_59_fu_344_p3, "tmp_59_fu_344_p3");
    sc_trace(mVcdFile, tmp_60_fu_366_p3, "tmp_60_fu_366_p3");
    sc_trace(mVcdFile, tmp_103_cast_fu_358_p1, "tmp_103_cast_fu_358_p1");
    sc_trace(mVcdFile, ult_fu_374_p2, "ult_fu_374_p2");
    sc_trace(mVcdFile, rev9_fu_380_p2, "rev9_fu_380_p2");
    sc_trace(mVcdFile, tmp_104_cast_fu_362_p1, "tmp_104_cast_fu_362_p1");
    sc_trace(mVcdFile, tmp_61_fu_390_p3, "tmp_61_fu_390_p3");
    sc_trace(mVcdFile, tmp_63_fu_412_p3, "tmp_63_fu_412_p3");
    sc_trace(mVcdFile, rev10_fu_419_p2, "rev10_fu_419_p2");
    sc_trace(mVcdFile, tmp_64_fu_430_p2, "tmp_64_fu_430_p2");
    sc_trace(mVcdFile, or_cond9_fu_425_p2, "or_cond9_fu_425_p2");
    sc_trace(mVcdFile, or_cond1_fu_435_p2, "or_cond1_fu_435_p2");
    sc_trace(mVcdFile, ult1_fu_447_p2, "ult1_fu_447_p2");
    sc_trace(mVcdFile, rev11_fu_453_p2, "rev11_fu_453_p2");
    sc_trace(mVcdFile, tmp_s_fu_283_p2, "tmp_s_fu_283_p2");
    sc_trace(mVcdFile, or_cond3_fu_323_p2, "or_cond3_fu_323_p2");
    sc_trace(mVcdFile, sel_tmp_fu_467_p2, "sel_tmp_fu_467_p2");
    sc_trace(mVcdFile, dir_g_cast_fu_386_p1, "dir_g_cast_fu_386_p1");
    sc_trace(mVcdFile, dir_g_3_cast_fu_459_p3, "dir_g_3_cast_fu_459_p3");
    sc_trace(mVcdFile, or_cond7_fu_352_p2, "or_cond7_fu_352_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_481_p2, "sel_tmp2_fu_481_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_487_p2, "sel_tmp3_fu_487_p2");
    sc_trace(mVcdFile, dir_g_1_fu_404_p3, "dir_g_1_fu_404_p3");
    sc_trace(mVcdFile, sel_tmp1_fu_473_p3, "sel_tmp1_fu_473_p3");
    sc_trace(mVcdFile, sel_tmp7_demorgan_fu_501_p2, "sel_tmp7_demorgan_fu_501_p2");
    sc_trace(mVcdFile, or_cond2_fu_441_p2, "or_cond2_fu_441_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_507_p2, "sel_tmp7_fu_507_p2");
    sc_trace(mVcdFile, tmp_fu_275_p1, "tmp_fu_275_p1");
    sc_trace(mVcdFile, tmp_54_fu_279_p1, "tmp_54_fu_279_p1");
    sc_trace(mVcdFile, dir_g_2_fu_525_p3, "dir_g_2_fu_525_p3");
    sc_trace(mVcdFile, dir_g_6_fu_532_p3, "dir_g_6_fu_532_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

gradient_decompositi::~gradient_decompositi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void gradient_decompositi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_195_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(gd_data_stream_V_full_n.read(), ap_const_logic_1))) {
        t_V_3_reg_184 = j_V_reg_567.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_195_p2.read()))) {
        t_V_3_reg_184 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read()))) && 
         esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_1))) {
        t_V_reg_173 = i_V_reg_559.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        t_V_reg_173 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        abs_g1_reg_627 = abs_g1_fu_519_p2.read();
        sel_tmp4_reg_617 = sel_tmp4_fu_493_p3.read();
        sel_tmp8_reg_622 = sel_tmp8_fu_513_p2.read();
        tmp_62_reg_612 = tmp_62_fu_398_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_V_reg_559 = i_V_fu_200_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read()))))) {
        j_V_reg_567 = j_V_fu_211_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read()))))) {
        p_Result_2_reg_606 = gy_data_stream_V_dout.read().range(15, 15);
        p_Result_s_reg_595 = gx_data_stream_V_dout.read().range(15, 15);
        tmp_67_reg_572 = gx_data_stream_V_dout.read();
        tmp_68_reg_581 = gy_data_stream_V_dout.read();
        xs_V_3_reg_590 = xs_V_3_fu_217_p2.read();
        xs_V_4_reg_601 = xs_V_4_fu_231_p2.read();
    }
}

void gradient_decompositi::thread_abs_g1_fu_519_p2() {
    abs_g1_fu_519_p2 = (!tmp_fu_275_p1.read().is_01() || !tmp_54_fu_279_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_fu_275_p1.read()) + sc_biguint<14>(tmp_54_fu_279_p1.read()));
}

void gradient_decompositi::thread_abs_gx_fu_254_p3() {
    abs_gx_fu_254_p3 = (!p_Result_s_reg_595.read()[0].is_01())? sc_lv<16>(): ((p_Result_s_reg_595.read()[0].to_bool())? p_Result_3_fu_245_p4.read(): tmp_67_reg_572.read());
}

void gradient_decompositi::thread_abs_gy_fu_269_p3() {
    abs_gy_fu_269_p3 = (!p_Result_2_reg_606.read()[0].is_01())? sc_lv<16>(): ((p_Result_2_reg_606.read()[0].to_bool())? p_Result_4_fu_260_p4.read(): tmp_68_reg_581.read());
}

void gradient_decompositi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gradient_decompositi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gradient_decompositi::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void gradient_decompositi::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void gradient_decompositi::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void gradient_decompositi::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void gradient_decompositi::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read())));
}

void gradient_decompositi::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_195_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void gradient_decompositi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gradient_decompositi::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void gradient_decompositi::thread_dir_g_1_fu_404_p3() {
    dir_g_1_fu_404_p3 = (!tmp_62_fu_398_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_62_fu_398_p2.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_1);
}

void gradient_decompositi::thread_dir_g_2_fu_525_p3() {
    dir_g_2_fu_525_p3 = (!tmp_62_reg_612.read()[0].is_01())? sc_lv<2>(): ((tmp_62_reg_612.read()[0].to_bool())? ap_const_lv2_2: ap_const_lv2_3);
}

void gradient_decompositi::thread_dir_g_3_cast_fu_459_p3() {
    dir_g_3_cast_fu_459_p3 = (!rev11_fu_453_p2.read()[0].is_01())? sc_lv<2>(): ((rev11_fu_453_p2.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_0);
}

void gradient_decompositi::thread_dir_g_6_fu_532_p3() {
    dir_g_6_fu_532_p3 = (!sel_tmp8_reg_622.read()[0].is_01())? sc_lv<2>(): ((sel_tmp8_reg_622.read()[0].to_bool())? dir_g_2_fu_525_p3.read(): sel_tmp4_reg_617.read());
}

void gradient_decompositi::thread_dir_g_cast_fu_386_p1() {
    dir_g_cast_fu_386_p1 = esl_zext<2,1>(rev9_fu_380_p2.read());
}

void gradient_decompositi::thread_exitcond8_fu_195_p2() {
    exitcond8_fu_195_p2 = (!t_V_reg_173.read().is_01() || !gx_rows_V.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_173.read() == gx_rows_V.read());
}

void gradient_decompositi::thread_exitcond_fu_206_p2() {
    exitcond_fu_206_p2 = (!t_V_3_reg_184.read().is_01() || !gx_cols_V.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_3_reg_184.read() == gx_cols_V.read());
}

void gradient_decompositi::thread_gd_data_stream_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        gd_data_stream_V_blk_n = gd_data_stream_V_full_n.read();
    } else {
        gd_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void gradient_decompositi::thread_gd_data_stream_V_din() {
    gd_data_stream_V_din = esl_concat<14,2>(abs_g1_reg_627.read(), dir_g_6_fu_532_p3.read());
}

void gradient_decompositi::thread_gd_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(gd_data_stream_V_full_n.read(), ap_const_logic_1))) {
        gd_data_stream_V_write = ap_const_logic_1;
    } else {
        gd_data_stream_V_write = ap_const_logic_0;
    }
}

void gradient_decompositi::thread_gx_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0))) {
        gx_data_stream_V_blk_n = gx_data_stream_V_empty_n.read();
    } else {
        gx_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void gradient_decompositi::thread_gx_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read()))))) {
        gx_data_stream_V_read = ap_const_logic_1;
    } else {
        gx_data_stream_V_read = ap_const_logic_0;
    }
}

void gradient_decompositi::thread_gy_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0))) {
        gy_data_stream_V_blk_n = gy_data_stream_V_empty_n.read();
    } else {
        gy_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void gradient_decompositi::thread_gy_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read()))))) {
        gy_data_stream_V_read = ap_const_logic_1;
    } else {
        gy_data_stream_V_read = ap_const_logic_0;
    }
}

void gradient_decompositi::thread_i_V_fu_200_p2() {
    i_V_fu_200_p2 = (!t_V_reg_173.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_reg_173.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void gradient_decompositi::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_195_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void gradient_decompositi::thread_j_V_fu_211_p2() {
    j_V_fu_211_p2 = (!t_V_3_reg_184.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_3_reg_184.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void gradient_decompositi::thread_or_cond1_fu_435_p2() {
    or_cond1_fu_435_p2 = (tmp_64_fu_430_p2.read() & tmp_57_fu_329_p2.read());
}

void gradient_decompositi::thread_or_cond2_fu_441_p2() {
    or_cond2_fu_441_p2 = (or_cond9_fu_425_p2.read() | or_cond1_fu_435_p2.read());
}

void gradient_decompositi::thread_or_cond3_fu_323_p2() {
    or_cond3_fu_323_p2 = (or_cond_fu_307_p2.read() | or_cond8_fu_318_p2.read());
}

void gradient_decompositi::thread_or_cond6_fu_334_p2() {
    or_cond6_fu_334_p2 = (tmp_53_fu_289_p2.read() & tmp_57_fu_329_p2.read());
}

void gradient_decompositi::thread_or_cond7_fu_352_p2() {
    or_cond7_fu_352_p2 = (or_cond6_fu_334_p2.read() | tmp_59_fu_344_p3.read());
}

void gradient_decompositi::thread_or_cond8_fu_318_p2() {
    or_cond8_fu_318_p2 = (p_Result_s_reg_595.read() & tmp_56_fu_313_p2.read());
}

void gradient_decompositi::thread_or_cond9_fu_425_p2() {
    or_cond9_fu_425_p2 = (p_Result_2_reg_606.read() & rev10_fu_419_p2.read());
}

void gradient_decompositi::thread_or_cond_fu_307_p2() {
    or_cond_fu_307_p2 = (tmp_53_fu_289_p2.read() & rev_fu_301_p2.read());
}

void gradient_decompositi::thread_p_Result_3_fu_245_p4() {
    p_Result_3_fu_245_p4 = esl_bitset<16,16,32,1>(xs_V_3_reg_590.read(), ap_const_lv32_F, ap_const_lv1_0);
}

void gradient_decompositi::thread_p_Result_4_fu_260_p4() {
    p_Result_4_fu_260_p4 = esl_bitset<16,16,32,1>(xs_V_4_reg_601.read(), ap_const_lv32_F, ap_const_lv1_0);
}

void gradient_decompositi::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void gradient_decompositi::thread_rev10_fu_419_p2() {
    rev10_fu_419_p2 = (tmp_63_fu_412_p3.read() ^ ap_const_lv1_1);
}

void gradient_decompositi::thread_rev11_fu_453_p2() {
    rev11_fu_453_p2 = (ult1_fu_447_p2.read() ^ ap_const_lv1_1);
}

void gradient_decompositi::thread_rev9_fu_380_p2() {
    rev9_fu_380_p2 = (ult_fu_374_p2.read() ^ ap_const_lv1_1);
}

void gradient_decompositi::thread_rev_fu_301_p2() {
    rev_fu_301_p2 = (tmp_55_fu_294_p3.read() ^ ap_const_lv1_1);
}

void gradient_decompositi::thread_sel_tmp1_fu_473_p3() {
    sel_tmp1_fu_473_p3 = (!sel_tmp_fu_467_p2.read()[0].is_01())? sc_lv<2>(): ((sel_tmp_fu_467_p2.read()[0].to_bool())? dir_g_cast_fu_386_p1.read(): dir_g_3_cast_fu_459_p3.read());
}

void gradient_decompositi::thread_sel_tmp2_fu_481_p2() {
    sel_tmp2_fu_481_p2 = (tmp_s_fu_283_p2.read() ^ ap_const_lv1_1);
}

void gradient_decompositi::thread_sel_tmp3_fu_487_p2() {
    sel_tmp3_fu_487_p2 = (or_cond7_fu_352_p2.read() & sel_tmp2_fu_481_p2.read());
}

void gradient_decompositi::thread_sel_tmp4_fu_493_p3() {
    sel_tmp4_fu_493_p3 = (!sel_tmp3_fu_487_p2.read()[0].is_01())? sc_lv<2>(): ((sel_tmp3_fu_487_p2.read()[0].to_bool())? dir_g_1_fu_404_p3.read(): sel_tmp1_fu_473_p3.read());
}

void gradient_decompositi::thread_sel_tmp7_demorgan_fu_501_p2() {
    sel_tmp7_demorgan_fu_501_p2 = (tmp_s_fu_283_p2.read() | or_cond7_fu_352_p2.read());
}

void gradient_decompositi::thread_sel_tmp7_fu_507_p2() {
    sel_tmp7_fu_507_p2 = (sel_tmp7_demorgan_fu_501_p2.read() ^ ap_const_lv1_1);
}

void gradient_decompositi::thread_sel_tmp8_fu_513_p2() {
    sel_tmp8_fu_513_p2 = (or_cond2_fu_441_p2.read() & sel_tmp7_fu_507_p2.read());
}

void gradient_decompositi::thread_sel_tmp_fu_467_p2() {
    sel_tmp_fu_467_p2 = (tmp_s_fu_283_p2.read() & or_cond3_fu_323_p2.read());
}

void gradient_decompositi::thread_start_out() {
    start_out = real_start.read();
}

void gradient_decompositi::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void gradient_decompositi::thread_tmp_103_cast_fu_358_p1() {
    tmp_103_cast_fu_358_p1 = esl_zext<17,16>(abs_gx_fu_254_p3.read());
}

void gradient_decompositi::thread_tmp_104_cast_fu_362_p1() {
    tmp_104_cast_fu_362_p1 = esl_zext<17,16>(abs_gy_fu_269_p3.read());
}

void gradient_decompositi::thread_tmp_53_fu_289_p2() {
    tmp_53_fu_289_p2 = (!tmp_67_reg_572.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(tmp_67_reg_572.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void gradient_decompositi::thread_tmp_54_fu_279_p1() {
    tmp_54_fu_279_p1 = abs_gx_fu_254_p3.read().range(14-1, 0);
}

void gradient_decompositi::thread_tmp_55_fu_294_p3() {
    tmp_55_fu_294_p3 = tmp_68_reg_581.read().range(15, 15);
}

void gradient_decompositi::thread_tmp_56_fu_313_p2() {
    tmp_56_fu_313_p2 = (!tmp_68_reg_581.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<1>(): (sc_bigint<16>(tmp_68_reg_581.read()) < sc_bigint<16>(ap_const_lv16_1));
}

void gradient_decompositi::thread_tmp_57_fu_329_p2() {
    tmp_57_fu_329_p2 = (!tmp_68_reg_581.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): (sc_bigint<16>(tmp_68_reg_581.read()) > sc_bigint<16>(ap_const_lv16_0));
}

void gradient_decompositi::thread_tmp_58_fu_340_p2() {
    tmp_58_fu_340_p2 = (tmp_67_reg_572.read() & tmp_68_reg_581.read());
}

void gradient_decompositi::thread_tmp_59_fu_344_p3() {
    tmp_59_fu_344_p3 = tmp_58_fu_340_p2.read().range(15, 15);
}

void gradient_decompositi::thread_tmp_60_fu_366_p3() {
    tmp_60_fu_366_p3 = esl_concat<16,1>(abs_gy_fu_269_p3.read(), ap_const_lv1_0);
}

void gradient_decompositi::thread_tmp_61_fu_390_p3() {
    tmp_61_fu_390_p3 = esl_concat<16,1>(abs_gx_fu_254_p3.read(), ap_const_lv1_0);
}

void gradient_decompositi::thread_tmp_62_fu_398_p2() {
    tmp_62_fu_398_p2 = (!tmp_104_cast_fu_362_p1.read().is_01() || !tmp_61_fu_390_p3.read().is_01())? sc_lv<1>(): (sc_biguint<17>(tmp_104_cast_fu_362_p1.read()) > sc_biguint<17>(tmp_61_fu_390_p3.read()));
}

void gradient_decompositi::thread_tmp_63_fu_412_p3() {
    tmp_63_fu_412_p3 = tmp_67_reg_572.read().range(15, 15);
}

void gradient_decompositi::thread_tmp_64_fu_430_p2() {
    tmp_64_fu_430_p2 = (!tmp_67_reg_572.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<1>(): (sc_bigint<16>(tmp_67_reg_572.read()) < sc_bigint<16>(ap_const_lv16_1));
}

void gradient_decompositi::thread_tmp_fu_275_p1() {
    tmp_fu_275_p1 = abs_gy_fu_269_p3.read().range(14-1, 0);
}

void gradient_decompositi::thread_tmp_s_fu_283_p2() {
    tmp_s_fu_283_p2 = (!abs_gx_fu_254_p3.read().is_01() || !abs_gy_fu_269_p3.read().is_01())? sc_lv<1>(): (sc_biguint<16>(abs_gx_fu_254_p3.read()) > sc_biguint<16>(abs_gy_fu_269_p3.read()));
}

void gradient_decompositi::thread_ult1_fu_447_p2() {
    ult1_fu_447_p2 = (!tmp_61_fu_390_p3.read().is_01() || !tmp_104_cast_fu_362_p1.read().is_01())? sc_lv<1>(): (sc_biguint<17>(tmp_61_fu_390_p3.read()) < sc_biguint<17>(tmp_104_cast_fu_362_p1.read()));
}

void gradient_decompositi::thread_ult_fu_374_p2() {
    ult_fu_374_p2 = (!tmp_60_fu_366_p3.read().is_01() || !tmp_103_cast_fu_358_p1.read().is_01())? sc_lv<1>(): (sc_biguint<17>(tmp_60_fu_366_p3.read()) < sc_biguint<17>(tmp_103_cast_fu_358_p1.read()));
}

void gradient_decompositi::thread_xs_V_3_fu_217_p2() {
    xs_V_3_fu_217_p2 = (!ap_const_lv16_0.is_01() || !gx_data_stream_V_dout.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_0) - sc_biguint<16>(gx_data_stream_V_dout.read()));
}

void gradient_decompositi::thread_xs_V_4_fu_231_p2() {
    xs_V_4_fu_231_p2 = (!ap_const_lv16_0.is_01() || !gy_data_stream_V_dout.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_0) - sc_biguint<16>(gy_data_stream_V_dout.read()));
}

void gradient_decompositi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_195_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read()))) && esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_206_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, gy_data_stream_V_empty_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(gd_data_stream_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

